// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model Reservation {
  id           String      @id @default(cuid())
  guest        User?       @relation("Reservation_guest", fields: [guestId], references: [id])
  guestId      String?     @map("guest")
  status       String?     @default("Proceeding")
  restaurant   Restaurant? @relation("Reservation_restaurant", fields: [restaurantId], references: [id])
  restaurantId String?     @map("restaurant")
  table        Table?      @relation("Reservation_table", fields: [tableId], references: [id])
  tableId      String?     @map("table")
  expectedTime DateTime    @default(now())
  remark       String      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")

  @@index([guestId])
  @@index([restaurantId])
  @@index([tableId])
}

model Table {
  id                     String        @id @default(cuid())
  name                   String        @default("")
  restaurant             Restaurant?   @relation("Table_restaurant", fields: [restaurantId], references: [id])
  restaurantId           String?       @map("restaurant")
  content                String        @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  from_Reservation_table Reservation[] @relation("Reservation_table")

  @@index([restaurantId])
}

model Restaurant {
  id                              String            @id @default(cuid())
  name                            String            @default("")
  staffs                          User[]            @relation("Restaurant_staffs")
  content                         String            @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  logo                            String            @default("")
  from_Reservation_restaurant     Reservation[]     @relation("Reservation_restaurant")
  from_Table_restaurant           Table[]           @relation("Table_restaurant")
  from_FeatureToggle_restaurant   FeatureToggle[]   @relation("FeatureToggle_restaurant")
  from_FeatureSchedule_restaurant FeatureSchedule[] @relation("FeatureSchedule_restaurant")
}

model User {
  id                     String        @id @default(cuid())
  name                   String        @default("")
  phone                  String        @default("")
  email                  String        @unique @default("")
  password               String
  isStaff                Boolean       @default(false)
  posts                  Post[]        @relation("Post_author")
  restaurants            Restaurant[]  @relation("Restaurant_staffs")
  createdAt              DateTime?     @default(now())
  from_Reservation_guest Reservation[] @relation("Reservation_guest")
}

model Feature {
  id                           String            @id @default(cuid())
  name                         String            @default("")
  description                  String            @default("")
  from_FeatureToggle_feature   FeatureToggle[]   @relation("FeatureToggle_feature")
  from_FeatureSchedule_feature FeatureSchedule[] @relation("FeatureSchedule_feature")
}

model FeatureToggle {
  id         String       @id @default(cuid())
  feature    Feature?     @relation("FeatureToggle_feature", fields: [featureId], references: [id])
  featureId  String?      @map("feature")
  enabled    Boolean      @default(false)
  restaurant Restaurant[] @relation("FeatureToggle_restaurant")

  @@index([featureId])
}

model FeatureSchedule {
  id         String       @id @default(cuid())
  name       String       @default("")
  restaurant Restaurant[] @relation("FeatureSchedule_restaurant")
  feature    Feature[]    @relation("FeatureSchedule_feature")
  schedule   Schedule[]   @relation("FeatureSchedule_schedule")
  enabled    Boolean      @default(false)
}

model Schedule {
  id                            String            @id @default(cuid())
  name                          String            @default("")
  startedAt                     DateTime?         @default(now())
  endedAt                       DateTime?
  from_FeatureSchedule_schedule FeatureSchedule[] @relation("FeatureSchedule_schedule")

  @@index([startedAt])
  @@index([endedAt])
}

model Post {
  id       String  @id @default(cuid())
  title    String  @default("")
  content  String  @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author   User?   @relation("Post_author", fields: [authorId], references: [id])
  authorId String? @map("author")
  tags     Tag[]   @relation("Post_tags")

  @@index([authorId])
}

model Tag {
  id    String @id @default(cuid())
  name  String @default("")
  posts Post[] @relation("Post_tags")
}
