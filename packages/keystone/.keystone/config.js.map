{
  "version": 3,
  "sources": ["../keystone.ts", "../schema.ts", "../auth.ts"],
  "sourcesContent": ["import {config} from '@keystone-6/core';\nimport {lists} from './schema';\nimport {withAuth, session} from './auth';\n\nexport default withAuth(\n    config({\n        server: {\n            cors: {origin: '*', credentials: true},\n        },\n        db: {\n            provider: 'sqlite',\n            url: 'file:./keystone.db',\n        },\n        lists,\n        session,\n    })\n);\n", "import { list } from '@keystone-6/core';\nimport { allowAll } from '@keystone-6/core/access';\nimport {\n  text,\n  relationship,\n  password,\n  timestamp,\n  select,\n  checkbox,\n} from '@keystone-6/core/fields';\nimport { document } from '@keystone-6/fields-document';\nimport type { Lists } from '.keystone/types';\n\nexport const lists: Lists = {\n  Reservation: list({\n    access: allowAll,\n    fields: {\n      guest: relationship({ ref: 'User', many: false }),\n      status: select({\n        type: 'enum',\n        options: [{\n          label: 'Canceled',\n          value: 'Canceled',\n        }, {\n          label: 'Proceeding',\n          value: 'Proceeding',\n        }, {\n          label: 'Confirmed',\n          value: 'Confirmed',\n        }, {\n          label: 'Completed',\n          value: 'Completed',\n        }, ],\n        defaultValue: 'Proceeding',\n      }),\n      restaurant: relationship({ ref: 'Restaurant', many: false }),\n      table: relationship({ ref: 'Table', many: false }),\n      expectedTime: timestamp({\n        defaultValue: { kind: 'now' },\n        validation: { isRequired: true },\n      }),\n      remark: document({\n        formatting: true,\n        layouts: [\n          [1, 1],\n          [1, 1, 1],\n          [2, 1],\n          [1, 2],\n          [1, 2, 1],\n        ],\n        links: true,\n        dividers: true,\n      }),\n    },\n  }),\n  Table: list({\n    access: allowAll,\n    fields: {\n      name: text({ validation: { isRequired: true } }),\n      restaurant: relationship({ ref: 'Restaurant', many: false }),\n      content: document({\n        formatting: true,\n        layouts: [\n          [1, 1],\n          [1, 1, 1],\n          [2, 1],\n          [1, 2],\n          [1, 2, 1],\n        ],\n        links: true,\n        dividers: true,\n      }),\n    }\n  }),\n  Restaurant: list({\n    access: allowAll,\n    fields: {\n      name: text({ validation: { isRequired: true } }),\n      staffs: relationship({\n        ref: 'User.restaurants',\n        ui: {\n          displayMode: 'cards',\n          cardFields: ['name', 'email'],\n          inlineEdit: { fields: ['name', 'email'] },\n          linkToItem: true,\n          inlineConnect: true,\n        },\n        many: true,\n      }),\n      content: document({\n        formatting: true,\n        layouts: [\n          [1, 1],\n          [1, 1, 1],\n          [2, 1],\n          [1, 2],\n          [1, 2, 1],\n        ],\n        links: true,\n        dividers: true,\n      }),\n      logo: text({\n        hooks: {\n          resolveInput: async ({ resolvedData, context }) => {\n            console.log('resolveInput', context)\n            if (resolvedData.logo) {\n              return resolvedData.logo;\n            }\n            return 'https://via.placeholder.com/150';\n          },\n          validateInput: async ({ resolvedData, addValidationError }) => {\n            console.log('validateInput', resolvedData)\n            if (!resolvedData.logo) {\n              addValidationError('Logo is required');\n            }\n          }\n        }\n      }),\n    }\n  }),\n  User: list({\n    access: allowAll,\n    fields: {\n      name: text({ validation: { isRequired: true } }),\n      phone: text({ validation: { isRequired: true } }),\n      email: text({\n        validation: { isRequired: true },\n        isIndexed: 'unique',\n      }),\n      password: password({ validation: { isRequired: true } }),\n      isStaff: checkbox(),\n      posts: relationship({ ref: 'Post.author', many: true }),\n      restaurants: relationship({ ref: 'Restaurant.staffs', many: true }),\n      createdAt: timestamp({\n        defaultValue: { kind: 'now' },\n      }),\n    },\n  }),\n\n  Post: list({\n    access: allowAll,\n    fields: {\n      title: text({ validation: { isRequired: true } }),\n      content: document({\n        formatting: true,\n        layouts: [\n          [1, 1],\n          [1, 1, 1],\n          [2, 1],\n          [1, 2],\n          [1, 2, 1],\n        ],\n        links: true,\n        dividers: true,\n      }),\n      author: relationship({\n        ref: 'User.posts',\n        ui: {\n          displayMode: 'cards',\n          cardFields: ['name', 'email'],\n          inlineEdit: { fields: ['name', 'email'] },\n          linkToItem: true,\n          inlineConnect: true,\n        },\n        many: false,\n      }),\n      tags: relationship({\n        ref: 'Tag.posts',\n        many: true,\n        ui: {\n          displayMode: 'cards',\n          cardFields: ['name'],\n          inlineEdit: { fields: ['name'] },\n          linkToItem: true,\n          inlineConnect: true,\n          inlineCreate: { fields: ['name'] },\n        },\n      }),\n    },\n  }),\n  Tag: list({\n    access: allowAll,\n    ui: {\n      isHidden: true,\n    },\n    fields: {\n      name: text(),\n      posts: relationship({ ref: 'Post.tags', many: true }),\n    },\n  }),\n};\n", "// Welcome to some authentication for Keystone\n//\n// This is using @keystone-6/auth to add the following\n// - A sign-in page for your Admin UI\n// - A cookie-based stateless session strategy\n//    - Using a User email as the identifier\n//    - 30 day cookie expiration\n//\n// This file does not configure what Users can do, and the default for this starter\n// project is to allow anyone - logged-in or not - to do anything.\n//\n// If you want to prevent random people on the internet from accessing your data,\n// you can find out how by reading https://keystonejs.com/docs/guides/auth-and-access-control\n//\n// If you want to learn more about how our out-of-the-box authentication works, please\n// read https://keystonejs.com/docs/apis/auth#authentication-api\n\nimport { randomBytes } from 'crypto';\nimport { createAuth } from '@keystone-6/auth';\n\n// see https://keystonejs.com/docs/apis/session for the session docs\nimport { statelessSessions } from '@keystone-6/core/session';\n\n// for a stateless session, a SESSION_SECRET should always be provided\n//   especially in production (statelessSessions will throw if SESSION_SECRET is undefined)\nlet sessionSecret = process.env.SESSION_SECRET;\nif (!sessionSecret && process.env.NODE_ENV !== 'production') {\n  sessionSecret = randomBytes(32).toString('hex');\n}\n\n// withAuth is a function we can use to wrap our base configuration\nconst { withAuth } = createAuth({\n  listKey: 'User',\n  identityField: 'email',\n\n  // this is a GraphQL query fragment for fetching what data will be attached to a context.session\n  //   this can be helpful for when you are writing your access control functions\n  //   you can find out more at https://keystonejs.com/docs/guides/auth-and-access-control\n  sessionData: 'name createdAt',\n  secretField: 'password',\n\n  // WARNING: remove initFirstItem functionality in production\n  //   see https://keystonejs.com/docs/config/auth#init-first-item for more\n  initFirstItem: {\n    // if there are no items in the database, by configuring this field\n    //   you are asking the Keystone AdminUI to create a new user\n    //   providing inputs for these fields\n    fields: ['name', 'email', 'password'],\n\n    // it uses context.sudo() to do this, which bypasses any access control you might have\n    //   you shouldn't use this in production\n  },\n});\n\n// statelessSessions uses cookies for session tracking\n//   these cookies have an expiry, in seconds\n//   we use an expiry of 30 days for this starter\nconst sessionMaxAge = 60 * 60 * 24 * 30;\n\n// you can find out more at https://keystonejs.com/docs/apis/session#session-api\nconst session = statelessSessions({\n  maxAge: sessionMaxAge,\n  secret: sessionSecret!,\n});\n\nexport { withAuth, session };\n"],
  "mappings": "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",
  "names": ["import_core"]
}
